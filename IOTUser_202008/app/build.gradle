apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    //关闭AS校验我们的资源文件，或者说是PNG等图片
    aaptOptions.cruncherEnabled = false

    buildFeatures {
        dataBinding = true
    }
    /***解决混淆堆内存不够用java.lang.OutOfMemoryError**/
    dexOptions {
        javaMaxHeapSize "8g"
    }
    defaultConfig {
        applicationId "com.iot.user"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        resConfigs "zh"

        renderscriptTargetApi 30
        renderscriptSupportModeEnabled true
        vectorDrawables.useSupportLibrary = true

        // 设置MultiDex可用
        multiDexEnabled false
        flavorDimensions "versionCode"
        multiDexEnabled true
        flavorDimensions "versionCode"

        //   javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
        manifestPlaceholders = [
                GETUI_APP_ID    : "HvTtQnYIgT7M47C63TWZn6",
                GETUI_APP_KEY   : "MMi57wxl2y5i20KmIXFlA7",
                GETUI_APP_SECRET: "tYWid19x4i7ChkRR74Woo7"
        ]

        ndk {
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {//签名信息
        release {
            storeFile file('src/mingsha.jks')
            storePassword '123456qq'
            keyAlias 'mingsha'
            keyPassword '123456qq'
            v1SigningEnabled true
            v2SigningEnabled true
        }
        google {
            storeFile file('src/mingsha.jks')
            storePassword '123456qq'
            keyAlias = 'mingsha'
            keyPassword '123456qq'
        }
    }

    File customerproguardFile = file('src/proguard.cfg')
    buildTypes {
        release {
            //混淆
            minifyEnabled true
            //设置压缩对齐
//            zipAlignEnabled true
            signingConfig signingConfigs.release
            //移除无用的资源文件
//            shrinkResources true
            proguardFiles customerproguardFile.path
            buildConfigField "boolean", "LOG_DEBUG", "false"
        }
        debug {
            //混淆
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles customerproguardFile.path
            buildConfigField "boolean", "LOG_DEBUG", "true"
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            if (!variant.buildType.isDebuggable()) {
                //获取签名的名字 variant.signingConfig.name
                //要被替换的源字符串
                def sourceFile = "${variant.buildType.name}.apk"
                //  替换的字符串 //输出apk名称为：渠道名_版本名_时间.apk
                def replaceFile = "${appName}-${variant.versionName}_${variant.buildType.name}.apk"
                outputFileName = outputFileName.toString().replace(sourceFile, replaceFile)
            } else {
                outputFileName = "${appName}_${variant.flavorName}-${variant.versionName}_${variant.buildType.name}.apk"
            }
        }
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/main/assets/'] } }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    configurations.all {
        resolutionStrategy.eachDependency { details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '27.0.2'
                }
            }
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    implementation project(path: ':regionlibrary')
    implementation project(path: ':MultilevelTreeLibrary')
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /* Dex分包 */
    implementation 'com.android.support:multidex:1.0.3'
    /*日志*/
    implementation 'com.github.zhaokaiqiang.klog:library:1.6.0'
    /* 日志监听 */
    implementation 'com.github.maning0303:MNCrashMonitor:V1.1.1'
    /*网络监测 chuck */
    debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
    releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'
    /***bugly**/
    implementation 'com.tencent.bugly:crashreport:3.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    /****崩溃检测**/
    //  implementation "com.simple:spiderman:1.1.3"
    debugImplementation "com.simple:spiderman:1.1.3"
    releaseImplementation "com.simple:spiderman-no-op:1.1.3"
    /****内存泄漏检测**/
//        debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
//        implementation 'com.squareup.leakcanary:plumber-android:2.4'
//        implementation 'com.squareup.leakcanary:leakcanary-object-watcher-android:2.4'

    /*注解*/
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    /*个推*/
    implementation 'com.getui:sdk:2.13.3.0'
    implementation files('libs/hmssdk-2.6.3.301.jar')
    /*material风格的dialogs*/
    implementation 'com.afollestad.material-dialogs:core:0.9.3.0'
    /**扫描二维码**/
    implementation 'cn.bingoogolapple:bga-qrcode-zbar:1.3.7'
    implementation 'com.google.zxing:core:3.4.0'
    /****图片加载，用于点击放大图片**/
    implementation 'com.koushikdutta.ion:ion:2.1.9'
    implementation "com.squareup.picasso:picasso:2.5.2"
    /**星标评分*/
    implementation 'com.github.CB-ysx:CBRatingBar:3.0.1'

    /**图片加载Glide*/
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'jp.wasabeef:glide-transformations:2.0.2'

    /**权限库,不适合定位，相机等直接拒绝后的权限申请*/
    implementation 'com.yanzhenjie:permission:2.0.0-rc4'
    /**权限问题**/
    implementation 'pub.devrel:easypermissions:2.0.1'
    /* 图片选择 */
    implementation 'com.github.LuckSiege.PictureSelector:picture_library:v2.1.0'
    /** 工具类*/
    implementation 'com.blankj:utilcode:1.29.0'

    /* 状态栏 */
    implementation 'com.jaeger.statusbarutil:library:1.5.0'
    /* 提示框 */
    implementation 'com.github.maning0303:MNProgressHUD:V1.0.6'
    /* 版本升级 */
    implementation 'com.github.maning0303:MNUpdateAPK:V2.0.3'
    /****google 底部导航栏***/
    implementation 'com.ashokvarma.android:bottom-navigation-bar:2.1.0'
    /*下拉刷新框架*/
    implementation 'com.github.Aspsine:SwipeToLoadLayout:v1.0.4'

    //okhttp3
    implementation 'com.squareup.okhttp3:okhttp:4.2.0'
    implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"
    //retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    //AutoDispose解决RxJava内存泄漏
    implementation 'com.uber.autodispose:autodispose-android-archcomponents:1.3.0'

    /***微信支付***/
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:5.5.4'
    //  implementation 'am.widget:basetabstrip:26.1.0'
    implementation 'am.widget:basetabstrip:27.1.1'
    /***支付宝**/
    implementation(name: 'alipaySdk-15.6.5-20190718211148', ext: 'aar')
    implementation project(path: ':regionlibrary')
    implementation 'com.alibaba:fastjson:1.2.62'
}